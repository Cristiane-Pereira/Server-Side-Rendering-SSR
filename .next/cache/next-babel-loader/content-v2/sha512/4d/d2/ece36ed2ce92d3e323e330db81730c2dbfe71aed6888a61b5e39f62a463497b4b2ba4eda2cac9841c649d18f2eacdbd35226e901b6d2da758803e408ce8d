{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Cris\\\\Desktop\\\\HTML 5\\\\Aulas Recode\\\\projeto_next\\\\pages\\\\index.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport \"isomorphic-fech\";\nexport default class Home extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.props.repositories.map(repo => /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: repo.name\n      }, repo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\n_defineProperty(Home, \"getInitialProps\", async () => {\n  const response = await fetch(\"https://api.github.com/orgs/rocketseat/repos\");\n  return {\n    repositories: await response.json()\n  };\n});","map":{"version":3,"sources":["C:/Users/Cris/Desktop/HTML 5/Aulas Recode/projeto_next/pages/index.js"],"names":["React","Component","Home","render","props","repositories","map","repo","name","id","response","fetch","json"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AAEA,eAAe,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAUpCE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,gBACK,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,GAAxB,CAA4BC,IAAI,iBAC7B;AAAA,kBAAmBA,IAAI,CAACC;AAAxB,SAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAlBmC;;gBAAvBP,I,qBACQ,YAAY;AACjC,QAAMQ,QAAQ,GAAG,MAAMC,KAAK,CACxB,8CADwB,CAA5B;AAIA,SAAO;AACHN,IAAAA,YAAY,EAAE,MAAMK,QAAQ,CAACE,IAAT;AADjB,GAAP;AAEC,C","sourcesContent":["import React, { Component } from 'react';\r\nimport \"isomorphic-fech\";\r\n\r\nexport default class Home extends Component {\r\n    static getInitialProps = async () => {\r\n        const response = await fetch(\r\n            \"https://api.github.com/orgs/rocketseat/repos\"\r\n        );\r\n    \r\n        return {\r\n            repositories: await response.json() };\r\n        };\r\n\r\n        render(){\r\n            return(\r\n                <div>\r\n                    {this.props.repositories.map(repo => (\r\n                        <h1 key={repo.id}>{repo.name}</h1>\r\n                    ))}\r\n                </div>\r\n            );\r\n        }\r\n     \r\n    }"]},"metadata":{},"sourceType":"module"}